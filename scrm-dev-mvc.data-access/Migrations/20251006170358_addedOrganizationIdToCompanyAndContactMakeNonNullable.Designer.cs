// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scrm_dev_mvc.DataAccess.Data;

#nullable disable

namespace scrm_dev_mvc.data_access.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006170358_addedOrganizationIdToCompanyAndContactMakeNonNullable")]
    partial class addedOrganizationIdToCompanyAndContactMakeNonNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DealContactAssociation", b =>
                {
                    b.Property<int>("DealId")
                        .HasColumnType("int")
                        .HasColumnName("deal_id");

                    b.Property<int>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.HasKey("DealId", "ContactId")
                        .HasName("PK__deal_con__B03640C46D7A9C6B");

                    b.HasIndex("ContactId");

                    b.ToTable("deal_contact_association", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime")
                        .HasColumnName("activity_date");

                    b.Property<int?>("ActivityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("activity_type_id");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<int?>("DealId")
                        .HasColumnType("int")
                        .HasColumnName("deal_id");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("due_date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owner_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<string>("SubjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("subject_type");

                    b.HasKey("Id")
                        .HasName("PK__activity__3213E83F501E9A09");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DealId");

                    b.HasIndex("OwnerId");

                    b.ToTable("activity", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__activity__3213E83FFFA3CED0");

                    b.ToTable("activity_type", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("field_name");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_value");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owner_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("table_name");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__audit__3213E83F1F945816");

                    b.HasIndex("OwnerId");

                    b.ToTable("audit", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CallTime")
                        .HasColumnType("datetime")
                        .HasColumnName("call_time");

                    b.Property<int>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<string>("Direction")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("direction");

                    b.Property<int?>("DurationSeconds")
                        .HasColumnType("int")
                        .HasColumnName("duration_seconds");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<string>("Outcome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outcome");

                    b.Property<string>("Sid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__call__3213E83FCCB1D8F4");

                    b.HasIndex("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("call", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("domain");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("state");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__company__3213E83F2B20C397");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<int?>("LeadStatusId")
                        .HasColumnType("int")
                        .HasColumnName("lead_status_id");

                    b.Property<int?>("LifeCycleStageId")
                        .HasColumnType("int")
                        .HasColumnName("life_cycle_stage_id");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owner_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK__contact__3213E83FB765161C");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LeadStatusId");

                    b.HasIndex("LifeCycleStageId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OwnerId");

                    b.HasIndex(new[] { "Email" }, "UQ__contact__AB6E616478699CE9")
                        .IsUnique();

                    b.ToTable("contact", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("close_date");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owner_id");

                    b.Property<int>("StageId")
                        .HasColumnType("int")
                        .HasColumnName("stage_id");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__deal__3213E83F2D70B86A");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StageId");

                    b.ToTable("deal", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.DealLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DealId")
                        .HasColumnType("int")
                        .HasColumnName("deal_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("PK__deal_lin__3213E83F626389E4");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("deal_line_item", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<string>("Direction")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("direction");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int")
                        .HasColumnName("thread_id");

                    b.HasKey("Id")
                        .HasName("PK__email_me__3213E83FD8D84B8A");

                    b.HasIndex("ThreadId");

                    b.ToTable("email_message", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int")
                        .HasColumnName("workflow_id");

                    b.HasKey("Id")
                        .HasName("PK__email_te__3213E83FE66CAEDD");

                    b.HasIndex("WorkflowId");

                    b.ToTable("email_template", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailThread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_archived");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__email_th__3213E83FCB9916B7");

                    b.HasIndex("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("email_thread", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.GmailCred", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("GmailAccessToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gmail_access_token");

                    b.Property<string>("GmailRefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gmail_refresh_token");

                    b.HasKey("Email")
                        .HasName("PK__gmail_cr__AB6E61658357D9CF");

                    b.ToTable("gmail_cred", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.LeadStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LeadStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lead_status_name");

                    b.HasKey("Id")
                        .HasName("PK__lead_sta__3213E83FAC732FF9");

                    b.ToTable("lead_status", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Lifecycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LifeCycleStageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("life_cycle_stage_name");

                    b.HasKey("Id")
                        .HasName("PK__lifecycl__3213E83F25A8654C");

                    b.ToTable("lifecycle", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__organiza__3213E83FDD745463");

                    b.ToTable("organization", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__priority__3213E83F8C916A46");

                    b.ToTable("priority", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__product__3213E83F3344DAD3");

                    b.HasIndex("UserId");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__role__3213E83FB0D9A839");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__stage__3213E83F8E539D3D");

                    b.ToTable("stage", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("completed_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("due_date");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__task__3213E83F62A3F754");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StatusId");

                    b.ToTable("task", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("Id")
                        .HasName("PK__task_sta__3213E83F8995A1A3");

                    b.ToTable("task_status", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.TaskTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("Duedate")
                        .HasColumnType("datetime")
                        .HasColumnName("duedate");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int")
                        .HasColumnName("workflow_id");

                    b.HasKey("Id")
                        .HasName("PK__task_tem__3213E83F34E7FAD9");

                    b.HasIndex("WorkflowId");

                    b.ToTable("task_template", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastCheckedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<long?>("LastProcessedUid")
                        .HasColumnType("bigint");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("organization_id");

                    b.Property<string>("OtpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OtpExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83F5D023DD2");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__user__AB6E6164B3AFDF48")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.WorkflowTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<string>("WorkflowJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("workflow_json");

                    b.Property<string>("WorkflowName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("workflow_name");

                    b.HasKey("Id")
                        .HasName("PK__workflow__3213E83FA390A6D2");

                    b.HasIndex("UserId");

                    b.ToTable("workflow_template", (string)null);
                });

            modelBuilder.Entity("DealContactAssociation", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .IsRequired()
                        .HasConstraintName("FK_dca_contact");

                    b.HasOne("scrm_dev_mvc.Models.Deal", null)
                        .WithMany()
                        .HasForeignKey("DealId")
                        .IsRequired()
                        .HasConstraintName("FK_dca_deal");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Activity", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.ActivityType", "ActivityType")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTypeId")
                        .HasConstraintName("FK_activity_type");

                    b.HasOne("scrm_dev_mvc.Models.Contact", "Contact")
                        .WithMany("Activities")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK_activity_contact");

                    b.HasOne("scrm_dev_mvc.Models.Deal", "Deal")
                        .WithMany("Activities")
                        .HasForeignKey("DealId")
                        .HasConstraintName("FK_activity_deal");

                    b.HasOne("scrm_dev_mvc.Models.User", "Owner")
                        .WithMany("Activities")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_activity_owner");

                    b.Navigation("ActivityType");

                    b.Navigation("Contact");

                    b.Navigation("Deal");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Audit", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.User", "Owner")
                        .WithMany("Audits")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_audit_user");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Call", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Contact", "Contact")
                        .WithMany("Calls")
                        .HasForeignKey("ContactId")
                        .IsRequired()
                        .HasConstraintName("FK_call_contact");

                    b.HasOne("scrm_dev_mvc.Models.User", "User")
                        .WithMany("Calls")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_call_user");

                    b.Navigation("Contact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Company", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scrm_dev_mvc.Models.User", "User")
                        .WithMany("Companies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_company_user");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Contact", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_contact_company");

                    b.HasOne("scrm_dev_mvc.Models.LeadStatus", "LeadStatus")
                        .WithMany("Contacts")
                        .HasForeignKey("LeadStatusId")
                        .HasConstraintName("FK_contact_lead");

                    b.HasOne("scrm_dev_mvc.Models.Lifecycle", "LifeCycleStage")
                        .WithMany("Contacts")
                        .HasForeignKey("LifeCycleStageId")
                        .HasConstraintName("FK_contact_lifecycle");

                    b.HasOne("scrm_dev_mvc.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scrm_dev_mvc.Models.User", "Owner")
                        .WithMany("Contacts")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_contact_owner");

                    b.Navigation("Company");

                    b.Navigation("LeadStatus");

                    b.Navigation("LifeCycleStage");

                    b.Navigation("Organization");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Deal", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Company", "Company")
                        .WithMany("Deals")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_deal_company");

                    b.HasOne("scrm_dev_mvc.Models.User", "Owner")
                        .WithMany("Deals")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_deal_user");

                    b.HasOne("scrm_dev_mvc.Models.Stage", "Stage")
                        .WithMany("Deals")
                        .HasForeignKey("StageId")
                        .IsRequired()
                        .HasConstraintName("FK_deal_stage");

                    b.Navigation("Company");

                    b.Navigation("Owner");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.DealLineItem", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Deal", "Deal")
                        .WithMany("DealLineItems")
                        .HasForeignKey("DealId")
                        .IsRequired()
                        .HasConstraintName("FK_dli_deal");

                    b.HasOne("scrm_dev_mvc.Models.Product", "Product")
                        .WithMany("DealLineItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_dli_product");

                    b.Navigation("Deal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailMessage", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.EmailThread", "Thread")
                        .WithMany("EmailMessages")
                        .HasForeignKey("ThreadId")
                        .IsRequired()
                        .HasConstraintName("FK_em_thread");

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailTemplate", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.WorkflowTemplate", "Workflow")
                        .WithMany("EmailTemplates")
                        .HasForeignKey("WorkflowId")
                        .IsRequired()
                        .HasConstraintName("FK_et_wft");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailThread", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Contact", "Contact")
                        .WithMany("EmailThreads")
                        .HasForeignKey("ContactId")
                        .IsRequired()
                        .HasConstraintName("FK_et_contact");

                    b.HasOne("scrm_dev_mvc.Models.User", "User")
                        .WithMany("EmailThreads")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_et_user");

                    b.Navigation("Contact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.GmailCred", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.User", "EmailNavigation")
                        .WithOne("GmailCred")
                        .HasForeignKey("scrm_dev_mvc.Models.GmailCred", "Email")
                        .HasPrincipalKey("scrm_dev_mvc.Models.User", "Email")
                        .IsRequired()
                        .HasConstraintName("FK_gmail_user");

                    b.Navigation("EmailNavigation");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Product", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_product_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Task", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Priority", "Priority")
                        .WithMany("Tasks")
                        .HasForeignKey("PriorityId")
                        .IsRequired()
                        .HasConstraintName("FK_task_priority");

                    b.HasOne("scrm_dev_mvc.Models.TaskStatus", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_task_status");

                    b.Navigation("Priority");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.TaskTemplate", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.WorkflowTemplate", "Workflow")
                        .WithMany("TaskTemplates")
                        .HasForeignKey("WorkflowId")
                        .IsRequired()
                        .HasConstraintName("FK_tt_wft");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.User", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_user_org");

                    b.HasOne("scrm_dev_mvc.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_user_role");

                    b.Navigation("Organization");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.WorkflowTemplate", b =>
                {
                    b.HasOne("scrm_dev_mvc.Models.User", "User")
                        .WithMany("WorkflowTemplates")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_wft_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.ActivityType", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Company", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Deals");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Contact", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Calls");

                    b.Navigation("EmailThreads");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Deal", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("DealLineItems");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.EmailThread", b =>
                {
                    b.Navigation("EmailMessages");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.LeadStatus", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Lifecycle", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Organization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Priority", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Product", b =>
                {
                    b.Navigation("DealLineItems");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.Stage", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.TaskStatus", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Audits");

                    b.Navigation("Calls");

                    b.Navigation("Companies");

                    b.Navigation("Contacts");

                    b.Navigation("Deals");

                    b.Navigation("EmailThreads");

                    b.Navigation("GmailCred");

                    b.Navigation("Products");

                    b.Navigation("WorkflowTemplates");
                });

            modelBuilder.Entity("scrm_dev_mvc.Models.WorkflowTemplate", b =>
                {
                    b.Navigation("EmailTemplates");

                    b.Navigation("TaskTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
